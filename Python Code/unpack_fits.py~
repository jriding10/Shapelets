# fitsio reads in a fits file and extracts relevant information

def unpack_fits( fitsfile, ra_ned, dec_ned )

	import math
	import numpy
	import astropy
	   
	radians = math.pi/180;

	# I/O
	from astropy.io import fits
	hdulist = fits.open(fitsfile);		# open the fits file
	info = hdulist[0].header;		# retrieve observation and data history
	file_data = hdulist[0].data;		# make image manipulable
	hdulist.close()				# close the fits file

	# Because some fits are (1,1,N,N) or (N,N)
	image_size = data.shape;
	if image_size[0] + image_size[1] == 2
		x = image_size[3];
		y = image_size[4];
		for i = 0:(x-1)
			for j = 0:(y-1)
				data[i,j] = file_data[0,0,i,j];
	else
		data = file_data;
	
	# extracting image information
	cpx1 = info['CRPIX1'];
	delta1 = info['CDELT1'];
	ra = info['CRVAL1'];

	cpx2 = info['CRPIX2'];
	delta2 = info['CDELT2'];
	dec = info['CRVAL2'];


	# Locate object in terms of pixel number from ra/dec info
	ang_res = max( delta1, delta2 )*radians;	# angular resolution of image  
	obj_diff_ra = ra_ned - ra;			
	obj_diff_dec = dec_ned - dec;			
	ra_pxl = int(cpx1 - math.floor(obj_diff_ra/delta1));	# xpxl location of object
	dec_pxl = int(cpx2 - math.floor(obj_diff_dec/delta2));	# ypxl location of object

return data, ra_pxl, dec_pxl, ang_res
